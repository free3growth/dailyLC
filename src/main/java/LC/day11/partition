/**
给你一个字符串 s，请你将 s 分割成一些子串，使每个子串都是 回文串 。返回 s 所有可能的分割方案。

回文串 是正着读和反着读都一样的字符串。

 

示例 1：

输入：s = "aab"
输出：[["a","a","b"],["aa","b"]]
示例 2：

输入：s = "a"
输出：[["a"]]
 

提示：

1 <= s.length <= 16
s 仅由小写英文字母组成
**/

class Solution {
    List<List<String>> res=new ArrayList<>();
    List<String> temp=new ArrayList<>();
    public List<List<String>> partition(String s) {
        backtracking(s,0);
        return res;
    }
    public void backtracking(String s,int startIndex){
        if(startIndex==s.length()){
            res.add(new ArrayList<>(temp));
            return;
        }
        for(int i=startIndex;i<s.length();i++){
            String str=s.substring(startIndex,i+1);
            if(!isReverse(str)) continue;
            temp.add(str);
            backtracking(s,i+1);
            temp.remove(temp.size()-1);
        }
    }
    public boolean isReverse(String s){
        int start=0,end=s.length()-1;
        while(start<end){
            if(s.charAt(start)==s.charAt(end)){
                start++;
                end--;
            }else{
                return false;
            }
        }
        return true;
    }
}
