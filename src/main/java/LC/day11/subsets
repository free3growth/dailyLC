/**
给你一个整数数组 nums ，数组中的元素 互不相同 。返回该数组所有可能的子集（幂集）。

解集 不能 包含重复的子集。你可以按 任意顺序 返回解集。

 

示例 1：

输入：nums = [1,2,3]
输出：[[],[1],[2],[1,2],[3],[1,3],[2,3],[1,2,3]]
示例 2：

输入：nums = [0]
输出：[[],[0]]
 

提示：

1 <= nums.length <= 10
-10 <= nums[i] <= 10
nums 中的所有元素 互不相同
**/

class Solution {
    List<List<Integer>> res=new ArrayList<>();
    List<Integer> temp=new ArrayList<>();
    public List<List<Integer>> subsets(int[] nums) {
        backTracking(nums,0);
        return res;
    }

    public void backTracking(int[] nums,int startIndex){
        //递归终止条件
        res.add(new ArrayList<>(temp));
        if(startIndex>=nums.length){
            return;
        }
        //处理当前层逻辑
        for(int i=startIndex;i<nums.length;i++){
            temp.add(nums[i]);
            //下探
            backTracking(nums,i+1);           
            //清理恢复当前层
            temp.remove(temp.size()-1);
        }
    }
}
