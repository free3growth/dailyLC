/**
给定一个仅包含数字 2-9 的字符串，返回所有它能表示的字母组合。答案可以按 任意顺序 返回。

给出数字到字母的映射如下（与电话按键相同）。注意 1 不对应任何字母。



 

示例 1：

输入：digits = "23"
输出：["ad","ae","af","bd","be","bf","cd","ce","cf"]
示例 2：

输入：digits = ""
输出：[]
示例 3：

输入：digits = "2"
输出：["a","b","c"]
**/

class Solution {
    List<String> res=new ArrayList<>();
    StringBuilder sb=new StringBuilder();
    public List<String> letterCombinations(String digits) {
        if(digits.length()==0) return res;
        String[] numArr={"","","abc","def","ghi","jkl","mno","pqrs","tuv","wxyz"};
        backtracking(digits,numArr,0);
        return res;
    }
    public void backtracking(String digits,String[] numArr,int startIndex){
        //递归终止条件
        if(startIndex==digits.length()){
            res.add(sb.toString());
            return;
        }
        String cur=numArr[digits.charAt(startIndex)-'0'];
        for(char ch:cur.toCharArray()){
            sb.append(ch);
            backtracking(digits,numArr,startIndex+1);
            sb.deleteCharAt(sb.length()-1);
        }
    }
}
